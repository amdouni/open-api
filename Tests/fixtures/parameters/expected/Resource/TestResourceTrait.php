<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Jane\OpenApi\Tests\Expected\Resource;

trait TestResourceTrait
{
    /**
     * @param array $testBody
     * @param array $queryParameters {
     *
     *     @var string $testQuery
     * }
     *
     * @param array $headerParameters {
     *
     *     @var string $testHeader
     * }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return null|\Psr\Http\Message\ResponseInterface
     */
    public function testGetWithPathParameters(array $testBody, array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Jane\OpenApi\Tests\Expected\Endpoint\TestGetWithPathParameters($testBody, $queryParameters, $headerParameters);

        return $this->executePsr7Endpoint($endpoint, $fetch);
    }

    /**
     * @param array $testBody
     * @param array $queryParameters {
     *
     *     @var string $testQuery
     * }
     *
     * @param array $headerParameters {
     *
     *     @var string $testHeader
     * }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return null|\Psr\Http\Message\ResponseInterface
     */
    public function testPostWithPathParameters(array $testBody, array $queryParameters = [], array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Jane\OpenApi\Tests\Expected\Endpoint\TestPostWithPathParameters($testBody, $queryParameters, $headerParameters);

        return $this->executePsr7Endpoint($endpoint, $fetch);
    }

    /**
     * @param array $queryParameters {
     *
     *     @var string $testString
     *     @var int $testInteger
     *     @var float $testFloat
     *     @var array $testArray
     *     @var string $testRequired
     *     @var string $testDefault
     * }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return null|\Psr\Http\Message\ResponseInterface
     */
    public function testQueryParameters(array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Jane\OpenApi\Tests\Expected\Endpoint\TestQueryParameters($queryParameters);

        return $this->executePsr7Endpoint($endpoint, $fetch);
    }

    /**
     * @param array $headerParameters {
     *
     *     @var string $testString
     *     @var int $testInteger
     *     @var float $testFloat
     *     @var array $testArray
     *     @var string $testRequired
     *     @var string $testDefault
     * }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return null|\Psr\Http\Message\ResponseInterface
     */
    public function testHeaderParameters(array $headerParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Jane\OpenApi\Tests\Expected\Endpoint\TestHeaderParameters($headerParameters);

        return $this->executePsr7Endpoint($endpoint, $fetch);
    }

    /**
     * @param array $formParameters {
     *
     *     @var string $testString
     *     @var int $testInteger
     *     @var float $testFloat
     *     @var array $testArray
     *     @var string $testRequired
     *     @var string $testDefault
     * }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return null|\Psr\Http\Message\ResponseInterface
     */
    public function testFormParameters(array $formParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Jane\OpenApi\Tests\Expected\Endpoint\TestFormParameters($formParameters);

        return $this->executePsr7Endpoint($endpoint, $fetch);
    }

    /**
     * @param array $formParameters {
     *
     *     @var string|resource|\Psr\Http\Message\StreamInterface $testFile
     * }
     *
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return null|\Psr\Http\Message\ResponseInterface
     */
    public function testFormFileParameters(array $formParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Jane\OpenApi\Tests\Expected\Endpoint\TestFormFileParameters($formParameters);

        return $this->executePsr7Endpoint($endpoint, $fetch);
    }

    /**
     * @param string $testString
     * @param int    $testInteger
     * @param float  $testFloat
     * @param string $fetch       Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return null|\Psr\Http\Message\ResponseInterface
     */
    public function testPathParameters(string $testString, int $testInteger, float $testFloat, string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Jane\OpenApi\Tests\Expected\Endpoint\TestPathParameters($testString, $testInteger, $testFloat);

        return $this->executePsr7Endpoint($endpoint, $fetch);
    }

    /**
     * @param int    $testInteger
     * @param string $fetch       Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @return null|\Psr\Http\Message\ResponseInterface
     */
    public function getByTestInteger(int $testInteger, string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Jane\OpenApi\Tests\Expected\Endpoint\GetByTestInteger($testInteger);

        return $this->executePsr7Endpoint($endpoint, $fetch);
    }
}
